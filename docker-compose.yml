services:
  elasticsearch:
    build:
      context: .
      dockerfile: elasticsearch/Dockerfile
    container_name: elasticsearch
    volumes:
      - shared_data:/tmp
      - elasticsearch-data:/usr/share/elasticsearch/data
       - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
    networks:
      - my_network
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 50

  kibana:
    build:
      context: .
      dockerfile: kibana/Dockerfile
    container_name: kibana
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
      - kibana-data:/usr/share/kibana/data
      - shared_data:/app/es_config
    ports:
      - "5601:5601"
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - my_network
    environment:
      - ELASTIC_PASSWORD_FILE=/app/es_config
    healthcheck:
      test: ["CMD", "curl", "-s", "http://localhost:5601/api/status"]
      interval: 10s
      timeout: 5s
      retries: 50

  assistant-api:
    build: .
    container_name: assistant-api
    environment:
      - FE_PORT=8001
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_INDEX=ai-index
      - ES_USERNAME=elastic
      - ES_PASSWORD_FILE=/app/es_config/es_output.txt
    ports:
      - "8001:8001"
      - "8002:8002"
    volumes:
      - shared_data:/app/es_config
    depends_on:
      kibana:
        condition: service_healthy
    networks:
      - my_network
    entrypoint: |
      /bin/sh -c "
      ./scripts/start.sh
      "
volumes:
  shared_data:
    driver: local
  elasticsearch-data:
    driver: local
  kibana-data:
    driver: local

networks:
  my_network:
    driver: bridge